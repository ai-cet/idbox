<svg width="{{ width_max }}" height="{{ height_max }}" xmlns="http://www.w3.org/2000/svg">
<!-- Define the default styles -->
  <style>
    * {
      font-family: monospace;
      text-anchor: middle;
      dominant-baseline: central;
      line-height: 0;
    }
    .borderline {
      fill: none;
      stroke: black;
      stroke-width: 2;
    }
    .gridline {
      stroke: black;
      stroke-width: 1;
    }
    .header {
      font-family: helvetica, sans-serif;
      font-weight: {{ header["fontWeight"] }};
    }
    .default {
      font-weight: {{ header["fontWeight"] }};
    }
    .right-align {
      text-anchor: end;
    }
  </style>

<!-- Shade in vertical fills -->
{% for column in columns %}
  {% set i = loop.index0 %}
  <!-- If last then make bottom right rounded -->
  {% if loop.last %}
  <path d="M {{ i * width_box }},{{ height_box }}
           h {{ width_box }}
           v {{ height_max - height_box - 10 }}
           a 10,10 0 0 1 -10,10
           h {{ -(width_box - 10) }}
           Z" fill="{{ column['fill'] }}"/>
  {% else %}
  <!-- No rounded corners -->
  <rect x="{{ i * width_box }}" y="{{ height_box }}" width="{{ width_box }}" height="{{ height_max - height_box }}" fill="{{ column['fill'] }}"/>
  {% endif %}
{% endfor %}

<!-- Draw bubbles -->
{% for column in columns %}
  {% set i = loop.index0 %}
  {% for value in column['values'] %}
    {% set j = loop.index0 %}
    {% if not value['isHidden'] %}
      {% if value['isShaded'] %}
        <ellipse cx="{{ (i + 0.5) * width_box }}" cy="{{ (j + 1.5) * height_box + height_writing }}" rx="{{ 0.5 * width_bubble }}" ry="{{ 0.5 * height_bubble }}" stroke="black" fill="black"/>
      {% else %}
        <ellipse cx="{{ (i + 0.5) * width_box }}" cy="{{ (j + 1.5) * height_box + height_writing }}" rx="{{ 0.5 * width_bubble }}" ry="{{ 0.5 * height_bubble }}" stroke="black" fill="white"/>
      {% endif %}
    {% endif %}
    <text text-anchor="middle" dominant-baseline="middle" x="{{ (i + 0.5 * (1 + value.get('isLabel', False))) * width_box }}" y="{{ (j + 1.5) * height_box + height_writing }}" font-weight="{{ column['fontWeight'] }}" font-size="{{ column['fontSize'] }}" fill="{{ column['color'] }}"{% if column.get('hideCircle', False) %} class="right-align"{% endif %}>{{ value['value'] }}</text>
  {% endfor %}
{% endfor %}

  <!-- Draw the header background, rounded on top-left and top-right by 10 -->
  <rect x="0" y="0" width="{{ width_max }}" height="{{ height_box }}" fill="{{ header['fill'] }}" />

  <!-- Write the header text -->
  <text x="{{ width_max / 2 }}" y="{{ height_box / 2 + height_text_offset }}" font-size="{{ header['fontSize'] }}" fill="{{ header['color'] }}" class="header">{{ header['value'] }}</text>

  <!-- Write the default values in text area -->
  {% for value, position, font_size in default_value_position_size_triplets %}
    {% if value %}
      <text x="{{ position * width_box }}" y="{{ height_box + 0.5 * height_writing + height_text_offset }}" font-size="{{ font_size }}" class="default">{{ value }}</text>
    {% endif %}
  {% endfor %}

<!-- Define the markers -->
  <rect x="0" y="0" width="{{ width_box }}" height="{{ height_box }}" fill="white" />
  <rect x="0" y="{{ height_max - height_box }}" width="{{ width_box }}" height="{{ height_box }}" fill="white" />
  <rect x="{{ width_max - width_box }}" y="0" width="{{ width_box }}" height="{{ height_box }}" fill="white" />

  {% for is_white_row in data_matrix %}
    {% set r = loop.index0 %}
    {% for is_white in is_white_row %}
      {% set c = loop.index0 %}
      {% if is_white %}
        <!-- Draw marker top-left (inkscape <= 1.1 cannot use href) -->
        <rect x="{{ c * width_box / 14 }}" y="{{ r * height_box / 14 }}" width="{{ width_box / 14 }}" height="{{ height_box / 14 }}" fill="white" />
        <!-- Draw marker bottom-left -->
        <rect x="{{ c * width_box / 14 }}" y="{{ height_max - height_box + r * height_box / 14 }}" width="{{ width_box / 14 }}" height="{{ height_box / 14 }}" fill="white" />
        <!-- Draw marker top-right -->
        <rect x="{{ width_max - width_box + c * width_box / 14 }}" y="{{ r * height_box / 14 }}" width="{{ width_box / 14 }}" height="{{ height_box / 14 }}" fill="white" />
      {% else %}
        <!-- Draw marker top-left (inkscape <= 1.1 cannot use href) -->
        <rect x="{{ c * width_box / 14 }}" y="{{ r * height_box / 14 }}" width="{{ width_box / 14 }}" height="{{ height_box / 14 }}" fill="black" />
        <!-- Draw marker bottom-left -->
        <rect x="{{ c * width_box / 14 }}" y="{{ height_max - height_box + r * height_box / 14 }}" width="{{ width_box / 14 }}" height="{{ height_box / 14 }}" fill="black" />
        <!-- Draw marker top-right -->
        <rect x="{{ width_max - width_box + c * width_box / 14 }}" y="{{ r * height_box / 14 }}" width="{{ width_box / 14 }}" height="{{ height_box / 14 }}" fill="black" />
      {% endif %}
    {% endfor %}
  {% endfor %}

<!-- Draw vertical grid lines -->
{% for column in columns %}
  {% if column.get("hasDivider", False) %}
    {% set i = loop.index %}
    <line x1="{{ i * width_box }}" y1="{{ height_box + height_writing }}" x2="{{ i * width_box }}" y2="{{ height_max }}" class="gridline"/>
  {% endif %}
{% endfor %}

<!-- Draw horizontal grid lines -->
  <line x1="0" x2="{{ width_max }}" y1="{{ height_box }}" y2="{{ height_box }}" class="gridline"/>
  <line x1="0" x2="{{ width_max }}" y1="{{ height_box + height_writing }}" y2="{{ height_box + height_writing }}" class="gridline"/>

  <!-- Draw the outer box -->
  <path d="M 0,0
           h {{ width_max }}
           v {{ height_max - 10 }}
           a 10,10 0 0 1 -10,10
           h {{ -(width_max - 10) }}
           Z" class="borderline"/>
</svg>
